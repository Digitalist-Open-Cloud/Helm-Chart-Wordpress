apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wordpress.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: {{ .Values.rolloutStrategy }}
  selector:
    matchLabels:
      {{- include "wordpress.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        checksum/values: {{ toJson .Values | sha256sum }}
        checksum/config: {{ tpl (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- end }}
      labels:
        {{- include "wordpress.selectorLabels" . | nindent 8 }}
        {{- include "wordpress.installationLabels" . | nindent 8 }}
        {{- include "wordpress.componentLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wordpress.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: copy-wordpress
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
          command: [sh, -cx]
          args:
            - >-
              echo Copying WordPress source to volume;
              ls -l /var/www/html;
              cp -r /var/www/html/. /wordpress-app/;
              chmod 444 /wordpress-app/web/wp-config.php
          volumeMounts:
            - mountPath: /wordpress-app/
              name: wordpress-app
      containers:
{{- range .Values.sidecars }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
          env:
          {{- range .env }}
            - name: {{ .name }}
          {{- if .value }}
              value: {{ .value | quote }}
          {{- end }}
          {{- if .valueFrom }}
              valueFrom: {{ toYaml .valueFrom | nindent 16 }}
          {{- end }}
          {{- end }}
          volumeMounts:
          {{- range .volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath | quote }}
          {{- if .subPath }}
              subPath: {{ .subPath }}
          {{- end }}
          {{- end }}
          {{- if .securityContext }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          {{- end }}
          {{- if .livenessProbe }}
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .readinessProbe }}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .ports }}
          ports:
            {{- toYaml .ports | nindent 12 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{ toYaml .resources | nindent 12 }}
          {{- end }}
{{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- if .Values.postStart }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "{{ .Values.postStart }}"]
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            {{- range .Values.env }}
            {{- if .valueFromSecret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFromSecret.secretName | quote }}
                  key: {{ .valueFromSecret.key | quote }}
            {{- else if .value }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            tcpSocket:
              port: php-fpm
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            tcpSocket:
              port: php-fpm
          {{- end }}
          ports:
            - name: php-fpm
              containerPort: 9000
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/html
              name: wordpress-app
            - mountPath: /var/www/html/web/app/uploads/
              name: wordpress-data
              subPath: uploads
            - mountPath: /usr/local/etc/php-fpm.d/zz-docker.conf
              name: wordpress-config
              subPath: php-fpm-zz-docker.conf
            - mountPath: /usr/local/etc/php/conf.d/zz-custom.ini
              name: wordpress-config
              subPath: zz-custom.ini
            - mountPath: /usr/local/etc/php/conf.d/opcache-recommended.ini
              name: wordpress-config
              subPath: php-opcache-recommended.ini
            - mountPath: /run/secrets/wordpress/
              name: wordpress-config
            {{- if .Values.dotenv.enabled }}
            - name: dotenv-file
              mountPath: /var/www/html/.env
              subPath: .env
            {{- end }}
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
{{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx
          image: "{{ .Values.nginx.repository }}:{{ .Values.nginx.tag | default "alpine" }}"
          #command: [nginx-debug, '-g', 'daemon off;']
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 100
            privileged: false
            allowPrivilegeEscalation: false
          ports:
            - name: http
              containerPort: 8080
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: /wp-admin/install.php
              port: http
              scheme: HTTP
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            tcpSocket:
              port: http
          {{- end }}
          volumeMounts:
            - mountPath: /var/www/html/
              name: wordpress-app
              readOnly: true
            - mountPath: /var/www/html/web/app/uploads
              name: wordpress-data
              subPath: uploads
              readOnly: true
            - mountPath: /etc/nginx/nginx.conf
              name: wordpress-config
              subPath: nginx.conf
              readOnly: true
            - mountPath: /tmp/
              name: nginx-tmp
            - mountPath: /var/cache/nginx/
              name: nginx-cache
            {{- if .Values.dotenv.enabled }}
            - name: dotenv-file
              mountPath: /var/www/html/.env
              subPath: .env
            {{- end }}
      volumes:
        - name: wordpress-app
          emptyDir: {}
        - name: wordpress-config
          configMap:
            name: {{ include "wordpress.fullname" . }}-config
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: {{ include "wordpress.fullname" . }}-data
        - name: nginx-tmp
          emptyDir:
            medium: Memory
        - name: nginx-cache
          emptyDir: {}
        {{- if .Values.dotenv.enabled }}
        - name: dotenv-file
          secret:
            secretName: {{ .Values.dotenv.name }}
        {{- end }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
