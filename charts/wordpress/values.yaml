replicaCount: 1
rolloutStrategy: Recreate

image:
  repository: wordpress
  pullPolicy: Always
  tag: "5.7-php7.4-fpm-alpine"

nginx:
  repository: digitalist/nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.21.6
  # Prefixes to strip from request, if request is /mysite/foo and you
  # want to strip /mysite/ from request, so you get /foo instead you add:
  # stripPrefixes:
  #   - mysite
  # This is useful if you are using sub paths for you domain and targeting
  # different wordpress pods.
  stripPrefixes: []

env:
  - name: DB_HOST
    value: database.default.svc.cluster.local:3306
  - name: DB_NAME
    value: db_wordpress
  - name: DB_USER
    value: db_wordpress
  - name: DB_PASSWORD
    valueFromSecret:
      secretName: mariadb
      key: password
  - name: DB_PREFIX
    value: wp_
## As:
## imagePullSecrets:
##   - name: myRegistryKeySecretName
##
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 82
  runAsGroup: 82
  fsGroup: 82

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 12000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  ingressClassName: nginx
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

##
## livenessProbe options
##   The kubelet uses liveness probes to know when to restart a container.
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

##
## readinessProbe options
##   The kubelet uses readiness probes to know when a container is ready to start accepting traffic.
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1


##
## Wordpress config options
##
wordpress:
  ## extra config to be added to wp-config.php
  ##  see: https://wordpress.org/support/article/editing-wp-config-php/
  config_extra: |-
    #### general settings
    #define('WP_CACHE', true );
    #define('DISALLOW_FILE_EDIT', true );
    #define('MEDIA_TRASH', true );
    #define('WP_POST_REVISIONS', '10' );
    define( 'WP_DEBUG', true );
    define( 'WP_DEBUG_LOG', true );
    $_SERVER[‘HTTPS’]=’on’;

    #### memory limits
    # define('WP_MEMORY_LIMIT', '40' );       # default
    # define('WP_MAX_MEMORY_LIMIT', '256' );  # default

    #### network, multi-site settings
    define('MULTISITE', true);
    # define('SUBDOMAIN_INSTALL', true);
    # define('DOMAIN_CURRENT_SITE', 'example.com');
    # define('PATH_CURRENT_SITE', '/');
    # define('SITE_ID_CURRENT_SITE', 1);
    # define('BLOG_ID_CURRENT_SITE', 1);
    # start: fixes for cookies issues with multiple domains
    # define( 'COOKIE_DOMAIN', '' );
    # define( 'ADMIN_COOKIE_PATH', '/' );
    # define( 'COOKIEPATH', '/' );
    # define( 'SITECOOKIEPATH', '/' );
    # start: in case of cookies issues with multiple domains this could be helpful:
    #   https://wordpress.stackexchange.com/questions/259839/cookies-in-multisite-where-network-sites-have-their-own-domain-name
    #   https://docs.bitnami.com/installer/apps/wordpress-multisite/configuration/configure-wordpress-multisite/#troubleshooting-129
    # end:   fixes for cookies issues with multiple domains


  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    ## wordpress data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    accessMode: ReadWriteOnce
    size: 10Gi

sidecars:
  []

extraSecrets:
  create: false
  data: {}
# secrets need to base64 encoded when added.
#  data:
#    name: Zm9vCg==
#    bar: YmFyCg==

extraConfigMap:
  create: false
  data: {}
  # You can create an extra config map, and attach data to it. This will be named
  # {{ include "wordpress.fullname" . }}-extra-config-map
  # data:
  #   my.file: |
  #     foo: bar
extraVolumes: []
# extraVolumes:
# - name: mySecretVolume
#   secret:
#     secretName: wordpress-extra-secrets
# - name: my.file
#   configMap:
#     name: wordpress-extra-config-map
#     items:
#     - key: "my.file"
#       path: "/tmp/my.file"
extraVolumeMounts: []
# extraVolumeMounts:
#   - name: mySecretVolume
#     mountPath: /foo/secrets/mySecretVolume/
# - name: my.file
#   mountPath: /tmp/my.file
#   subPath: my.file

# If enabled, it will mount a secret to a .env file
dotenv:
  enabled: false
  name: wordpress
component: ""